/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;
import java.awt.*;
import java.util.*;
import java.util.logging.Handler;
import javax.swing.*;
import javax.swing.text.DefaultCaret;
/**
 *
 * @author Visur
 */
public class GUI extends javax.swing.JFrame {
  public static  ImageIcon[] images = new  ImageIcon[6];

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    public void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Spin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        Start = new javax.swing.JButton();
        massageLabel = new javax.swing.JLabel();
        Infolabel = new javax.swing.JLabel();
        winCountLabel = new javax.swing.JLabel();
        betMax = new javax.swing.JButton();
        addCoin = new javax.swing.JButton();
        winInfoLable = new javax.swing.JLabel();
        betOne = new javax.swing.JButton();
        betLabel = new javax.swing.JLabel();
        userCoinsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        Spin.setText("Spin");
        Spin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpinActionPerformed(evt);
            }
        });
        
        

         Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Start.setText("Start");
        Start.setActionCommand("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        betMax.setText("Bet Max");
        betMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                betMaxActionPerformed(evt);
            }
        });

        addCoin.setText("Add Coin");
        addCoin.setActionCommand("Get 1 Coin");
        addCoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCoinActionPerformed(evt);
            }
        });

        betOne.setText("Bet one");
        betOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                betOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(Spin)
                        .addGap(64, 64, 64)
                        .addComponent(Reset)
                        .addGap(75, 75, 75)
                        .addComponent(Start)
                        .addGap(52, 52, 52)
                        .addComponent(betMax)
                        .addGap(40, 40, 40)
                        .addComponent(addCoin, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(betOne)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(userCoinsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(44, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(betLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(winCountLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(massageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Infolabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addComponent(winInfoLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Spin)
                    .addComponent(Reset)
                    .addComponent(Start)
                    .addComponent(betMax)
                    .addComponent(addCoin)
                    .addComponent(betOne))
                .addGap(5, 5, 5))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(massageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Infolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(winCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(winInfoLable, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(betLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userCoinsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                  
   
    public static void spinAction(){
        if( Reel.scount==0){
        massageLabel.setText("Press start button to start");
    }else if( Reel.betcoins<4 &&  Reel.betcoins>0){
        Reel.count=0;
        for(int i=0;i<3;i++){
        Reel.spin();
        }
        setLabel();
        Reel.win();
         Reel.betcoins=0;
       String bet = Integer.toString( Reel.betcoins);
            betLabel.setText(bet);
       String won = Integer.toString( Reel.wincount);
       String lost = Integer.toString( Reel.lostcount);
       winInfoLable.setText("You Wining count -"+won+"Your lost count - "+lost);
        }else{
            massageLabel.setText("Insuficiant bet value");
    }
         Reel.ucoins = Integer.toString( Reel.usercoins);
        userCoinsLabel.setText( Reel.ucoins);
    }
    
    public static void SpinActionPerformed(java.awt.event.ActionEvent evt) { 
        spinAction();
        Reel.print();
    }                                    

    public void StartActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        start();
        displayInfo();
        Reel.ucoins = Integer.toString(Reel.usercoins);
        userCoinsLabel.setText(Reel.ucoins);
    }                                     

    public void betMaxActionPerformed(java.awt.event.ActionEvent evt) {                                       
        if(Reel.betcoins==0 && Reel.usercoins>=3){
        Reel.betcoins = Reel.betcoins+3;
        Reel.betavarage=Reel.betavarage+3;
        userx();
            String bet = Integer.toString(Reel.betcoins);
            betLabel.setText(bet);
        }else{
            massageLabel.setText("You can only bet maximum 3 coins");
        }   
    }                                      

    public void addCoinActionPerformed(java.awt.event.ActionEvent evt) {                                        
            Reel.usercoins++;
            Reel.ucoins = Integer.toString(Reel.usercoins);
            userCoinsLabel.setText(Reel.ucoins);
    }                                       

    public void betOneActionPerformed(java.awt.event.ActionEvent evt) {                                       
            if(Reel.usercoins>0){
            Reel.betcoins++;
            Reel.betavarage=Reel.betavarage+1;
            userx();
            String bet = Integer.toString(Reel.betcoins);
            betLabel.setText(bet);
            }else{
                massageLabel.setText("Insuficant coins");
            }
    }    
    
     public void ResetActionPerformed(java.awt.event.ActionEvent evt) {
         Reel.userxcoins=Reel.userxcoins+Reel.betcoins;
        Reel.usercoins = Reel.userxcoins;
        Reel.betcoins=0;
        String bet = Integer.toString(Reel.betcoins);
            betLabel.setText(bet);
            Reel.ucoins = Integer.toString(Reel.usercoins);
            userCoinsLabel.setText(Reel.ucoins);
    }                                     

     private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        
    } 

    /**
     * @param args the command line arguments
     */
    public static void setLabel(){
       jLabel1.setIcon(images[Reel.index1]);
       jLabel2.setIcon(images[Reel.index2]);
       jLabel3.setIcon(images[Reel.index3]);
    }
    
    public void start(){
        Reel.scount++;
        if(Reel.usercoins<10){
            massageLabel.setText("Not enough coins");
            Reel.scount=0;
        }else
            massageLabel.setText("Add minimum 1 coins to start");
    }
    
    public void displayInfo(){
         Infolabel.setText("<html>Seven = 7 coins<br>Bell = 6 coins<br>Wartermelon = 5 coins<br>plum = 4 coins<br>Lemon = 3 coins<br>Chery = 2 coins</html>");
           
    }
    
    
    public void userx(){
         Reel.userxcoins=(Reel.usercoins-Reel.betcoins);
            String userxcoins = Integer.toString(Reel.userxcoins);
            userCoinsLabel.setText(userxcoins);
    }
   
    public static void createFrame(){
        EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                JFrame frame = new JFrame("Test");
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                try 
                {
                   UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                   e.printStackTrace();
                }
                JPanel panel = new JPanel();
                panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
                panel.setOpaque(true);
                JTextArea textArea = new JTextArea(15, 50);
                textArea.setWrapStyleWord(true);
                textArea.setEditable(false);
                textArea.setFont(Font.getFont(Font.SANS_SERIF));
                JScrollPane scroller = new JScrollPane(textArea);
                scroller.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
                scroller.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                JPanel inputpanel = new JPanel();
                inputpanel.setLayout(new FlowLayout());
                JTextField input = new JTextField(20);
                JButton button = new JButton("Enter");
                DefaultCaret caret = (DefaultCaret) textArea.getCaret();
                caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
                panel.add(scroller);
                inputpanel.add(input);
                inputpanel.add(button);
                panel.add(inputpanel);
                frame.getContentPane().add(BorderLayout.CENTER, panel);
                frame.pack();
                frame.setLocationByPlatform(true);
                frame.setVisible(true);
                frame.setResizable(false);
                input.requestFocus();
            }
        });
    }
  
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Reel.spin();
        images[0]= new ImageIcon(new ImageIcon(Reel.images[0]).getImage().getScaledInstance(253, 164, Image.SCALE_DEFAULT));;
        images[1] = new ImageIcon(new ImageIcon(Reel.images[1]).getImage().getScaledInstance(253, 164, Image.SCALE_DEFAULT));
        images[2] = new ImageIcon(new ImageIcon(Reel.images[2]).getImage().getScaledInstance(253, 164, Image.SCALE_DEFAULT));
        images[3] = new ImageIcon(new ImageIcon(Reel.images[3]).getImage().getScaledInstance(253, 164, Image.SCALE_DEFAULT));
        images[4] = new ImageIcon(new ImageIcon(Reel.images[4]).getImage().getScaledInstance(253, 164, Image.SCALE_DEFAULT));
        images[5] = new ImageIcon(new ImageIcon(Reel.images[5]).getImage().getScaledInstance(253, 164, Image.SCALE_DEFAULT));
       
              
        
        
       
        /* Create and display the form */
       
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    public static javax.swing.JLabel Infolabel;
    public static javax.swing.JButton Spin;
    public static javax.swing.JButton Start;
    public static javax.swing.JButton addCoin;
    public static javax.swing.JLabel betLabel;
    public static javax.swing.JButton betMax;
    public static javax.swing.JButton betOne;
    public static javax.swing.JButton Reset;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel massageLabel;
    public static javax.swing.JLabel userCoinsLabel;
    public static javax.swing.JLabel winCountLabel;
    public static javax.swing.JLabel winInfoLable;
    // End of variables declaration                   
}
